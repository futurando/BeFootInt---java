<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- Configuration for the consult tweet application. Beans here define 
		the heart of the application logic. -->
	<context:annotation-config />

	<!-- Instructs the container to look for beans with @Transactional and decorate 
		them -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Tweet Consultor: the application entry-point -->
	<bean id="tweetConsultor" class="be.befootint.consulttweets.application.service.TweetConsultorImpl">
		<constructor-arg ref="twitterRepository"></constructor-arg>
		<constructor-arg ref="listsRepository"></constructor-arg>
	</bean>

	<!-- Hibernate implementation ; loads tweets and lists from the data source -->
	<bean id="twitterRepository" class="be.befootint.consulttweets.application.dao.hibernate.HibernateTwitterRepository">
		<constructor-arg ref="sessionFactory"></constructor-arg>
	</bean>

	<bean id="listsRepository" class="be.befootint.consulttweets.application.dao.hibernate.HibernateListsRepository">
		<constructor-arg ref="sessionFactory"></constructor-arg>
	</bean>
	
		<!-- Weaves in transactional advice around @Transactional methods -->
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>
